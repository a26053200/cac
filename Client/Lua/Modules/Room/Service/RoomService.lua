---
--- Generated by Tools
--- Created by zheng.
--- DateTime: 2019-01-31-22:08:50
---

local BaseService = require("Game.Core.Ioc.BaseService")
---@class Game.Modules.Room.Service.RoomService : Game.Core.Ioc.BaseService
---@field roomModel Game.Modules.Room.Model.RoomModel
---@field roleModel Game.Modules.Role.Model.RoleModel
local RoomService = class("RoomService",BaseService)

function RoomService:Ctor()
    nmgr:AddPush(Action.PushEnterRoom, handler(self,self.OnPushEnterRoom))
    nmgr:AddPush(Action.PushRoomRoleState, handler(self,self.OnPushRoomRoleState))
    nmgr:AddPush(Action.PushRoomLoadStart, handler(self,self.OnPushRoomLoadStart))
    nmgr:AddPush(Action.PushRoomGameStart, handler(self,self.OnPushRoomGameStart))
end

function RoomService:OnPushEnterRoom(response)
    self.roomModel.roomRoleList:Add(response.data)
end

function RoomService:OnPushRoomRoleState(response)
    self.roomModel:UpdateState(response.data.pos + 1,response.data.roleState)
end

function RoomService:OnPushRoomLoadStart(response)
    --self.roomModel:UpdateState(response.data.pos + 1,response.data.roleState)
end

function RoomService:OnPushRoomGameStart(response)
    --self.roomModel:UpdateState(response.data.pos + 1,response.data.roleState)
end

function RoomService:ExitRoom(callback)
    self:JsonRequest(Action.ExitRoom, {self.roleModel.roleId,self.roomModel.room.id}, function(data)
        callback(data)
    end)
end

function RoomService:ChangeState(state, callback)
    local role = self.roomModel.myRoleInfo;
    role.state = state
    self:JsonRequest(Action.ChangeState, {self.roomModel.room.id,role.id,state}, function(data)
        callback(data)
    end, function (data)

    end)
end

return RoomService
